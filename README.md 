```markdown
# Zoom Clone

Этот проект является клоном Zoom, который включает использование PeerJS и Socket.IO для видео-чатов в реальном времени.

## Установка

### Требования

- Node.js (рекомендуется версия 16 или новее)
- Yarn (установлен глобально)
- Ngrok (для публичных туннелей)

### Установка зависимостей

1. Клонируйте репозиторий и перейдите в директорию проекта.

    ```bash
    git clone <репозиторий>
    cd <папка_проекта>
    ```

2. Установите зависимости с помощью Yarn.

    ```bash
    yarn install
    ```

## Запуск проекта

### Сборка

Для сборки проекта выполните команду:

```bash
yarn build
```

Эта команда запустит TypeScript компиляцию и Webpack сборку клиентских файлов.

### Запуск в режиме разработки

Для работы в режиме разработки используйте следующее:

```bash
yarn devStart
```

Эта команда запустит сервер с использованием Nodemon, а также будет следить за изменениями в коде благодаря `tsc` и `webpack` в режиме watch.

### Запуск в режиме продакшн

Для запуска собранного приложения используйте:

```bash
yarn start
```

### Подключение Ngrok

Для того чтобы проект был доступен через интернет, необходимо настроить Ngrok.

1. Установите Ngrok (следуйте инструкциям на официальном сайте).
2. Запустите Ngrok, чтобы создать туннель к вашему локальному серверу:

    ```bash
    ngrok http 8080
    ```

3. Используйте предоставленный публичный URL Ngrok в процессе разработки и тестирования, чтобы к вашему приложению могли подключаться другие пользователи через интернет.

### Замена Ngrok URL

После запуска Ngrok, измените вашу конфигурацию PeerJS, чтобы использовать новый публичный URL. Откройте `src/modules/connection/peer.js` и обновите `host` на новый адрес.

```javascript
const peerOptions: PeerJSOption = {
    host: '<Ваш Ngrok URL>',
    port: 443,
    path: '/peerjs',
    secure: true,
    ...
};
```

## Дополнительная информация

- Убедитесь, что порты, используемые приложением, открыты и доступны.
- При использовании Ngrok следите за задачами безопасности (например, избегайте передачи чувствительных данных без шифрования).
- В случае необходимости адаптируйте конфигурацию TypeScript, Webpack и других инструментов под ваши нужды.

## Контакты

@kupilulitku Telegram

```